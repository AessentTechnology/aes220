ASxxxx Assembler V01.70 + NoICE + SDCC mods + Flat24 Feb-1999  (Intel 8051), page 1.



                              1 ; Copyright (C) 2009 Ubixum, Inc. 
                              2 ;
                              3 ; This library is free software; you can redistribute it and/or
                              4 ; modify it under the terms of the GNU Lesser General Public
                              5 ; License as published by the Free Software Foundation; either
                              6 ; version 2.1 of the License, or (at your option) any later version.
                              7 ; 
                              8 ; This library is distributed in the hope that it will be useful,
                              9 ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                             10 ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
                             11 ; Lesser General Public License for more details.
                             12 ; 
                             13 ; You should have received a copy of the GNU Lesser General Public
                             14 ; License along with this library; if not, write to the Free Software
                             15 ; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
                             16 
                             17 ; this is a the default 
                             18 ; full speed and high speed 
                             19 ; descriptors found in the TRM
                             20 ; change however you want but leave 
                             21 ; the descriptor pointers so the setupdat.c file works right
                             22  
                             23 
                             24 .module DEV_DSCR 
                             25 
                             26 ; descriptor types
                             27 ; same as setupdat.h
                    0001     28 DSCR_DEVICE_TYPE=1
                    0002     29 DSCR_CONFIG_TYPE=2
                    0003     30 DSCR_STRING_TYPE=3
                    0004     31 DSCR_INTERFACE_TYPE=4
                    0005     32 DSCR_ENDPOINT_TYPE=5
                    0006     33 DSCR_DEVQUAL_TYPE=6
                             34 
                             35 ; for the repeating interfaces
                    0009     36 DSCR_INTERFACE_LEN=9
                    0007     37 DSCR_ENDPOINT_LEN=7
                             38 
                             39 ; endpoint types
                    0000     40 ENDPOINT_TYPE_CONTROL=0
                    0001     41 ENDPOINT_TYPE_ISO=1
                    0002     42 ENDPOINT_TYPE_BULK=2
                    0003     43 ENDPOINT_TYPE_INT=3
                             44 
                             45     .globl	_dev_dscr, _dev_qual_dscr, _highspd_dscr, _fullspd_dscr, _dev_strings, _dev_strings_end
                             46 ; These need to be in code memory.  If
                             47 ; they aren't you'll have to manully copy them somewhere
                             48 ; in code memory otherwise SUDPTRH:L don't work right
                             49     .area	DSCR_AREA	(CODE)
                             50 
   0000                      51 _dev_dscr:
   0000 12                   52 	.db	dev_dscr_end-_dev_dscr    ; len
   0001 01                   53 	.db	DSCR_DEVICE_TYPE	  ; type
   0002 00 02                54 	.dw	0x0002			  ; usb 2.0
   0004 FF                   55 	.db	0xff  			  ; class (vendor specific)
   0005 FF                   56 	.db	0xff			  ; subclass (vendor specific)
ASxxxx Assembler V01.70 + NoICE + SDCC mods + Flat24 Feb-1999  (Intel 8051), page 2.



   0006 FF                   57 	.db	0xff			  ; protocol (vendor specific)
   0007 40                   58 	.db	64			  ; packet size (ep0)
   0008 43 24                59 	.dw	0x4324			  ; vendor id 
   000A DC 00                60 	.dw	0xdc00			  ; product id
   000C 01 00                61 	.dw	0x0100			  ; version id
   000E 01                   62 	.db	1		          ; manufacturer str idx
   000F 02                   63 	.db	2			  ; product str idx	
   0010 00                   64 	.db	0		          ; serial str idx 
   0011 01                   65 	.db	1                         ; n configurations
   0012                      66 dev_dscr_end:
                             67 
   0012                      68 _dev_qual_dscr:
   0012 0A                   69 	.db	dev_qualdscr_end-_dev_qual_dscr
   0013 06                   70 	.db	DSCR_DEVQUAL_TYPE
   0014 00 02                71 	.dw	0x0002                              ; usb 2.0
   0016 FF                   72 	.db	0xff
   0017 FF                   73 	.db	0xff
   0018 FF                   74 	.db	0xff
   0019 40                   75 	.db	64                                  ; max packet
   001A 01                   76 	.db	1									; n configs
   001B 00                   77 	.db	0									; extra reserved byte
   001C                      78 dev_qualdscr_end:
                             79 
   001C                      80 _highspd_dscr:
   001C 09                   81 	.db	highspd_dscr_end-_highspd_dscr      ; dscr len											;; Descriptor length
   001D 02                   82 	.db	DSCR_CONFIG_TYPE
                             83     ; can't use .dw because byte order is different
   001E 20                   84 	.db	(highspd_dscr_realend-_highspd_dscr) % 256 ; total length of config lsb
   001F 00                   85 	.db	(highspd_dscr_realend-_highspd_dscr) / 256 ; total length of config msb
   0020 01                   86 	.db	1								 ; n interfaces
   0021 01                   87 	.db	1								 ; config number
   0022 00                   88 	.db	0								 ; config string
   0023 80                   89 	.db	0x80                             ; attrs = bus powered, no wakeup
   0024 32                   90 	.db	0x32                             ; max power = 100ma
   0025                      91 highspd_dscr_end:
                             92 
                             93 ; all the interfaces next 
                             94 ; NOTE the default TRM actually has more alt interfaces
                             95 ; but you can add them back in if you need them.
                             96 ; here, we just use the default alt setting 1 from the trm
   0025 09                   97 	.db	DSCR_INTERFACE_LEN
   0026 04                   98 	.db	DSCR_INTERFACE_TYPE
   0027 00                   99 	.db	0				 ; index
   0028 00                  100 	.db	0				 ; alt setting idx
   0029 02                  101 	.db	2				 ; n endpoints	
   002A FF                  102 	.db	0xff			 ; class
   002B FF                  103 	.db	0xff
   002C FF                  104 	.db	0xff
   002D 03                  105 	.db	3	             ; string index	
                            106 
                            107 ; endpoint 2 out
   002E 07                  108 	.db	DSCR_ENDPOINT_LEN
   002F 05                  109 	.db	DSCR_ENDPOINT_TYPE
   0030 02                  110 	.db	0x02				;  ep2 dir=OUT and address
   0031 02                  111 	.db	ENDPOINT_TYPE_BULK	; type
   0032 00                  112 	.db	0x00				; max packet LSB
ASxxxx Assembler V01.70 + NoICE + SDCC mods + Flat24 Feb-1999  (Intel 8051), page 3.



   0033 02                  113 	.db	0x02				; max packet size=512 bytes
   0034 00                  114 	.db	0x00				; polling interval
                            115 
                            116 ; endpoint 6 in
   0035 07                  117 	.db	DSCR_ENDPOINT_LEN
   0036 05                  118 	.db	DSCR_ENDPOINT_TYPE
   0037 86                  119 	.db	0x86				;  ep6 dir=in and address
   0038 02                  120 	.db	ENDPOINT_TYPE_BULK	; type
   0039 00                  121 	.db	0x00				; max packet LSB
   003A 02                  122 	.db	0x02				; max packet size=512 bytes
   003B 00                  123 	.db	0x00				; polling interval
                            124 
   003C                     125 highspd_dscr_realend:
                            126 
   003C                     127     .even
   003C                     128 _fullspd_dscr:
   003C 09                  129 	.db	fullspd_dscr_end-_fullspd_dscr      ; dscr len
   003D 02                  130 	.db	DSCR_CONFIG_TYPE
                            131     ; can't use .dw because byte order is different
   003E 20                  132 	.db	(fullspd_dscr_realend-_fullspd_dscr) % 256 ; total length of config lsb
   003F 00                  133 	.db	(fullspd_dscr_realend-_fullspd_dscr) / 256 ; total length of config msb
   0040 01                  134 	.db	1								 ; n interfaces
   0041 01                  135 	.db	1								 ; config number
   0042 00                  136 	.db	0								 ; config string
   0043 80                  137 	.db	0x80                             ; attrs = bus powered, no wakeup
   0044 32                  138 	.db	0x32                             ; max power = 100ma
   0045                     139 fullspd_dscr_end:
                            140 
                            141 ; all the interfaces next 
                            142 ; NOTE the default TRM actually has more alt interfaces
                            143 ; but you can add them back in if you need them.
                            144 ; here, we just use the default alt setting 1 from the trm
   0045 09                  145 	.db	DSCR_INTERFACE_LEN
   0046 04                  146 	.db	DSCR_INTERFACE_TYPE
   0047 00                  147 	.db	0				 ; index
   0048 00                  148 	.db	0				 ; alt setting idx
   0049 02                  149 	.db	2				 ; n endpoints	
   004A FF                  150 	.db	0xff			 ; class
   004B FF                  151 	.db	0xff
   004C FF                  152 	.db	0xff
   004D 03                  153 	.db	3	             ; string index	
                            154 
                            155 ; endpoint 2 out
   004E 07                  156 	.db	DSCR_ENDPOINT_LEN
   004F 05                  157 	.db	DSCR_ENDPOINT_TYPE
   0050 02                  158 	.db	0x02				;  ep2 dir=OUT and address
   0051 02                  159 	.db	ENDPOINT_TYPE_BULK	; type
   0052 40                  160 	.db	0x40				; max packet LSB
   0053 00                  161 	.db	0x00				; max packet size=64 bytes
   0054 00                  162 	.db	0x00				; polling interval
                            163 
                            164 ; endpoint 6 in
   0055 07                  165 	.db	DSCR_ENDPOINT_LEN
   0056 05                  166 	.db	DSCR_ENDPOINT_TYPE
   0057 86                  167 	.db	0x86				;  ep6 dir=in and address
   0058 02                  168 	.db	ENDPOINT_TYPE_BULK	; type
ASxxxx Assembler V01.70 + NoICE + SDCC mods + Flat24 Feb-1999  (Intel 8051), page 4.



   0059 40                  169 	.db	0x40				; max packet LSB
   005A 00                  170 	.db	0x00				; max packet size=64 bytes
   005B 00                  171 	.db	0x00				; polling interval
                            172 
   005C                     173 fullspd_dscr_realend:
                            174 
   005C                     175 .even
   005C                     176 _dev_strings:
                            177 ; sample string
   005C                     178 _string0:
   005C 04                  179 	.db	string0end-_string0 ; len
   005D 03                  180 	.db	DSCR_STRING_TYPE
   005E 09 04               181     .db 0x09, 0x04     ; who knows
   0060                     182 string0end:
                            183 ; add more strings here
                            184 
   0060                     185 _string1:
   0060 32                  186     .db string1end-_string1
   0061 03                  187     .db DSCR_STRING_TYPE
   0062 61                  188     .ascii 'a'
   0063 00                  189     .db 0
   0064 65                  190     .ascii 'e'
   0065 00                  191     .db 0
   0066 73                  192     .ascii 's'
   0067 00                  193     .db 0
   0068 73                  194     .ascii 's'
   0069 00                  195     .db 0
   006A 65                  196     .ascii 'e'
   006B 00                  197     .db 0
   006C 6E                  198     .ascii 'n'
   006D 00                  199     .db 0
   006E 74                  200     .ascii 't'
   006F 00                  201     .db 0
   0070 20                  202     .ascii ' '
   0071 00                  203     .db 0
   0072 54                  204     .ascii 'T'
   0073 00                  205     .db 0
   0074 65                  206     .ascii 'e'
   0075 00                  207     .db 0
   0076 63                  208     .ascii 'c'
   0077 00                  209     .db 0
   0078 68                  210     .ascii 'h'
   0079 00                  211     .db 0
   007A 6E                  212     .ascii 'n'
   007B 00                  213     .db 0
   007C 6F                  214     .ascii 'o'
   007D 00                  215     .db 0
   007E 6C                  216     .ascii 'l'
   007F 00                  217     .db 0
   0080 6F                  218     .ascii 'o'
   0081 00                  219     .db 0
   0082 67                  220     .ascii 'g'
   0083 00                  221     .db 0
   0084 79                  222     .ascii 'y'
   0085 00                  223     .db 0
   0086 20                  224     .ascii ' '
ASxxxx Assembler V01.70 + NoICE + SDCC mods + Flat24 Feb-1999  (Intel 8051), page 5.



   0087 00                  225     .db 0
   0088 4C                  226     .ascii 'L'
   0089 00                  227     .db 0
   008A 74                  228     .ascii 't'
   008B 00                  229     .db 0
   008C 64                  230     .ascii 'd'
   008D 00                  231     .db 0
   008E 2E                  232     .ascii '.'
   008F 00                  233     .db 0
   0090 20                  234     .ascii ' '
   0091 00                  235     .db 0
   0092                     236 string1end:
                            237 
   0092                     238 _string2:
   0092 10                  239     .db string2end-_string2
   0093 03                  240     .db DSCR_STRING_TYPE
   0094 61                  241     .ascii 'a'
   0095 00                  242     .db 0
   0096 65                  243     .ascii 'e'
   0097 00                  244     .db 0
   0098 73                  245     .ascii 's'
   0099 00                  246     .db 0
   009A 32                  247     .ascii '2'
   009B 00                  248     .db 0
   009C 32                  249     .ascii '2'
   009D 00                  250     .db 0
   009E 30                  251     .ascii '0'
   009F 00                  252     .db 0
   00A0 20                  253     .ascii ' '
   00A1 00                  254     .db 0
   00A2                     255 string2end:
                            256 
   00A2                     257 _string3:
   00A2 0C                  258     .db string3end-_string3
   00A3 03                  259     .db DSCR_STRING_TYPE
   00A4 69                  260     .ascii 'i'
   00A5 00                  261     .db 0
   00A6 46                  262     .ascii 'F'
   00A7 00                  263     .db 0
   00A8 61                  264     .ascii 'a'
   00A9 00                  265     .db 0
   00AA 63                  266     .ascii 'c'
   00AB 00                  267     .db 0
   00AC 65                  268     .ascii 'e'
   00AD 00                  269     .db 0
   00AE                     270 string3end:
                            271     
   00AE                     272 _dev_strings_end:
   00AE 00 00               273     .dw 0x0000   ; just in case someone passes an index higher than the end to the firmware
