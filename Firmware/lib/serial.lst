                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Feb  3 2010) (UNIX)
                              4 ; This file was generated Thu Feb 28 13:14:41 2013
                              5 ;--------------------------------------------------------
                              6 	.module serial
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl __transchar
                             13 	.globl _EIPX6
                             14 	.globl _EIPX5
                             15 	.globl _EIPX4
                             16 	.globl _PI2C
                             17 	.globl _PUSB
                             18 	.globl _EIEX6
                             19 	.globl _EIEX5
                             20 	.globl _EIEX4
                             21 	.globl _EI2C
                             22 	.globl _EUSB
                             23 	.globl _SMOD1
                             24 	.globl _ERESI
                             25 	.globl _RESI
                             26 	.globl _INT6
                             27 	.globl _CY
                             28 	.globl _AC
                             29 	.globl _F0
                             30 	.globl _RS1
                             31 	.globl _RS0
                             32 	.globl _OV
                             33 	.globl _FL
                             34 	.globl _P
                             35 	.globl _TF2
                             36 	.globl _EXF2
                             37 	.globl _RCLK
                             38 	.globl _TCLK
                             39 	.globl _EXEN2
                             40 	.globl _TR2
                             41 	.globl _C_T2
                             42 	.globl _CP_RL2
                             43 	.globl _SM01
                             44 	.globl _SM11
                             45 	.globl _SM21
                             46 	.globl _REN1
                             47 	.globl _TB81
                             48 	.globl _RB81
                             49 	.globl _TI1
                             50 	.globl _RI1
                             51 	.globl _PS1
                             52 	.globl _PT2
                             53 	.globl _PS0
                             54 	.globl _PT1
                             55 	.globl _PX1
                             56 	.globl _PT0
                             57 	.globl _PX0
                             58 	.globl _PD7
                             59 	.globl _PD6
                             60 	.globl _PD5
                             61 	.globl _PD4
                             62 	.globl _PD3
                             63 	.globl _PD2
                             64 	.globl _PD1
                             65 	.globl _PD0
                             66 	.globl _EA
                             67 	.globl _ES1
                             68 	.globl _ET2
                             69 	.globl _ES0
                             70 	.globl _ET1
                             71 	.globl _EX1
                             72 	.globl _ET0
                             73 	.globl _EX0
                             74 	.globl _PC7
                             75 	.globl _PC6
                             76 	.globl _PC5
                             77 	.globl _PC4
                             78 	.globl _PC3
                             79 	.globl _PC2
                             80 	.globl _PC1
                             81 	.globl _PC0
                             82 	.globl _SM0
                             83 	.globl _SM1
                             84 	.globl _SM2
                             85 	.globl _REN
                             86 	.globl _TB8
                             87 	.globl _RB8
                             88 	.globl _TI
                             89 	.globl _RI
                             90 	.globl _PB7
                             91 	.globl _PB6
                             92 	.globl _PB5
                             93 	.globl _PB4
                             94 	.globl _PB3
                             95 	.globl _PB2
                             96 	.globl _PB1
                             97 	.globl _PB0
                             98 	.globl _TF1
                             99 	.globl _TR1
                            100 	.globl _TF0
                            101 	.globl _TR0
                            102 	.globl _IE1
                            103 	.globl _IT1
                            104 	.globl _IE0
                            105 	.globl _IT0
                            106 	.globl _PA7
                            107 	.globl _PA6
                            108 	.globl _PA5
                            109 	.globl _PA4
                            110 	.globl _PA3
                            111 	.globl _PA2
                            112 	.globl _PA1
                            113 	.globl _PA0
                            114 	.globl _EIP
                            115 	.globl _B
                            116 	.globl _EIE
                            117 	.globl _ACC
                            118 	.globl _EICON
                            119 	.globl _PSW
                            120 	.globl _TH2
                            121 	.globl _TL2
                            122 	.globl _RCAP2H
                            123 	.globl _RCAP2L
                            124 	.globl _T2CON
                            125 	.globl _SBUF1
                            126 	.globl _SCON1
                            127 	.globl _GPIFSGLDATLNOX
                            128 	.globl _GPIFSGLDATLX
                            129 	.globl _GPIFSGLDATH
                            130 	.globl _GPIFTRIG
                            131 	.globl _EP01STAT
                            132 	.globl _IP
                            133 	.globl _OEE
                            134 	.globl _OED
                            135 	.globl _OEC
                            136 	.globl _OEB
                            137 	.globl _OEA
                            138 	.globl _IOE
                            139 	.globl _IOD
                            140 	.globl _AUTOPTRSETUP
                            141 	.globl _EP68FIFOFLGS
                            142 	.globl _EP24FIFOFLGS
                            143 	.globl _EP2468STAT
                            144 	.globl _IE
                            145 	.globl _INT4CLR
                            146 	.globl _INT2CLR
                            147 	.globl _IOC
                            148 	.globl _AUTOPTRL2
                            149 	.globl _AUTOPTRH2
                            150 	.globl _AUTOPTRL1
                            151 	.globl _AUTOPTRH1
                            152 	.globl _SBUF0
                            153 	.globl _SCON0
                            154 	.globl __XPAGE
                            155 	.globl _EXIF
                            156 	.globl _IOB
                            157 	.globl _CKCON
                            158 	.globl _TH1
                            159 	.globl _TH0
                            160 	.globl _TL1
                            161 	.globl _TL0
                            162 	.globl _TMOD
                            163 	.globl _TCON
                            164 	.globl _PCON
                            165 	.globl _DPS
                            166 	.globl _DPH1
                            167 	.globl _DPL1
                            168 	.globl _DPH
                            169 	.globl _DPL
                            170 	.globl _SP
                            171 	.globl _IOA
                            172 	.globl _GPCR2
                            173 	.globl _ECC2B2
                            174 	.globl _ECC2B1
                            175 	.globl _ECC2B0
                            176 	.globl _ECC1B2
                            177 	.globl _ECC1B1
                            178 	.globl _ECC1B0
                            179 	.globl _ECCRESET
                            180 	.globl _ECCCFG
                            181 	.globl _EP8FIFOBUF
                            182 	.globl _EP6FIFOBUF
                            183 	.globl _EP4FIFOBUF
                            184 	.globl _EP2FIFOBUF
                            185 	.globl _EP1INBUF
                            186 	.globl _EP1OUTBUF
                            187 	.globl _EP0BUF
                            188 	.globl _UDMACRCQUAL
                            189 	.globl _UDMACRCL
                            190 	.globl _UDMACRCH
                            191 	.globl _GPIFHOLDAMOUNT
                            192 	.globl _FLOWSTBHPERIOD
                            193 	.globl _FLOWSTBEDGE
                            194 	.globl _FLOWSTB
                            195 	.globl _FLOWHOLDOFF
                            196 	.globl _FLOWEQ1CTL
                            197 	.globl _FLOWEQ0CTL
                            198 	.globl _FLOWLOGIC
                            199 	.globl _FLOWSTATE
                            200 	.globl _GPIFABORT
                            201 	.globl _GPIFREADYSTAT
                            202 	.globl _GPIFREADYCFG
                            203 	.globl _XGPIFSGLDATLNOX
                            204 	.globl _XGPIFSGLDATLX
                            205 	.globl _XGPIFSGLDATH
                            206 	.globl _EP8GPIFTRIG
                            207 	.globl _EP8GPIFPFSTOP
                            208 	.globl _EP8GPIFFLGSEL
                            209 	.globl _EP6GPIFTRIG
                            210 	.globl _EP6GPIFPFSTOP
                            211 	.globl _EP6GPIFFLGSEL
                            212 	.globl _EP4GPIFTRIG
                            213 	.globl _EP4GPIFPFSTOP
                            214 	.globl _EP4GPIFFLGSEL
                            215 	.globl _EP2GPIFTRIG
                            216 	.globl _EP2GPIFPFSTOP
                            217 	.globl _EP2GPIFFLGSEL
                            218 	.globl _GPIFTCB0
                            219 	.globl _GPIFTCB1
                            220 	.globl _GPIFTCB2
                            221 	.globl _GPIFTCB3
                            222 	.globl _GPIFADRL
                            223 	.globl _GPIFADRH
                            224 	.globl _GPIFCTLCFG
                            225 	.globl _GPIFIDLECTL
                            226 	.globl _GPIFIDLECS
                            227 	.globl _GPIFWFSELECT
                            228 	.globl _SETUPDAT
                            229 	.globl _SUDPTRCTL
                            230 	.globl _SUDPTRL
                            231 	.globl _SUDPTRH
                            232 	.globl _EP8FIFOBCL
                            233 	.globl _EP8FIFOBCH
                            234 	.globl _EP6FIFOBCL
                            235 	.globl _EP6FIFOBCH
                            236 	.globl _EP4FIFOBCL
                            237 	.globl _EP4FIFOBCH
                            238 	.globl _EP2FIFOBCL
                            239 	.globl _EP2FIFOBCH
                            240 	.globl _EP8FIFOFLGS
                            241 	.globl _EP6FIFOFLGS
                            242 	.globl _EP4FIFOFLGS
                            243 	.globl _EP2FIFOFLGS
                            244 	.globl _EP8CS
                            245 	.globl _EP6CS
                            246 	.globl _EP4CS
                            247 	.globl _EP2CS
                            248 	.globl _EP1INCS
                            249 	.globl _EP1OUTCS
                            250 	.globl _EP0CS
                            251 	.globl _EP8BCL
                            252 	.globl _EP8BCH
                            253 	.globl _EP6BCL
                            254 	.globl _EP6BCH
                            255 	.globl _EP4BCL
                            256 	.globl _EP4BCH
                            257 	.globl _EP2BCL
                            258 	.globl _EP2BCH
                            259 	.globl _EP1INBC
                            260 	.globl _EP1OUTBC
                            261 	.globl _EP0BCL
                            262 	.globl _EP0BCH
                            263 	.globl _FNADDR
                            264 	.globl _MICROFRAME
                            265 	.globl _USBFRAMEL
                            266 	.globl _USBFRAMEH
                            267 	.globl _TOGCTL
                            268 	.globl _WAKEUPCS
                            269 	.globl _SUSPEND
                            270 	.globl _USBCS
                            271 	.globl _XAUTODAT2
                            272 	.globl _XAUTODAT1
                            273 	.globl _I2CTL
                            274 	.globl _I2DAT
                            275 	.globl _I2CS
                            276 	.globl _PORTECFG
                            277 	.globl _PORTCCFG
                            278 	.globl _PORTACFG
                            279 	.globl _INTSETUP
                            280 	.globl _INT4IVEC
                            281 	.globl _INT2IVEC
                            282 	.globl _CLRERRCNT
                            283 	.globl _ERRCNTLIM
                            284 	.globl _USBERRIRQ
                            285 	.globl _USBERRIE
                            286 	.globl _GPIFIRQ
                            287 	.globl _GPIFIE
                            288 	.globl _EPIRQ
                            289 	.globl _EPIE
                            290 	.globl _USBIRQ
                            291 	.globl _USBIE
                            292 	.globl _NAKIRQ
                            293 	.globl _NAKIE
                            294 	.globl _IBNIRQ
                            295 	.globl _IBNIE
                            296 	.globl _EP8FIFOIRQ
                            297 	.globl _EP8FIFOIE
                            298 	.globl _EP6FIFOIRQ
                            299 	.globl _EP6FIFOIE
                            300 	.globl _EP4FIFOIRQ
                            301 	.globl _EP4FIFOIE
                            302 	.globl _EP2FIFOIRQ
                            303 	.globl _EP2FIFOIE
                            304 	.globl _OUTPKTEND
                            305 	.globl _INPKTEND
                            306 	.globl _EP8ISOINPKTS
                            307 	.globl _EP6ISOINPKTS
                            308 	.globl _EP4ISOINPKTS
                            309 	.globl _EP2ISOINPKTS
                            310 	.globl _EP8FIFOPFL
                            311 	.globl _EP8FIFOPFH
                            312 	.globl _EP6FIFOPFL
                            313 	.globl _EP6FIFOPFH
                            314 	.globl _EP4FIFOPFL
                            315 	.globl _EP4FIFOPFH
                            316 	.globl _EP2FIFOPFL
                            317 	.globl _EP2FIFOPFH
                            318 	.globl _EP8AUTOINLENL
                            319 	.globl _EP8AUTOINLENH
                            320 	.globl _EP6AUTOINLENL
                            321 	.globl _EP6AUTOINLENH
                            322 	.globl _EP4AUTOINLENL
                            323 	.globl _EP4AUTOINLENH
                            324 	.globl _EP2AUTOINLENL
                            325 	.globl _EP2AUTOINLENH
                            326 	.globl _EP8FIFOCFG
                            327 	.globl _EP6FIFOCFG
                            328 	.globl _EP4FIFOCFG
                            329 	.globl _EP2FIFOCFG
                            330 	.globl _EP8CFG
                            331 	.globl _EP6CFG
                            332 	.globl _EP4CFG
                            333 	.globl _EP2CFG
                            334 	.globl _EP1INCFG
                            335 	.globl _EP1OUTCFG
                            336 	.globl _REVCTL
                            337 	.globl _REVID
                            338 	.globl _FIFOPINPOLAR
                            339 	.globl _UART230
                            340 	.globl _BPADDRL
                            341 	.globl _BPADDRH
                            342 	.globl _BREAKPT
                            343 	.globl _FIFORESET
                            344 	.globl _PINFLAGSCD
                            345 	.globl _PINFLAGSAB
                            346 	.globl _IFCONFIG
                            347 	.globl _CPUCS
                            348 	.globl _RES_WAVEDATA_END
                            349 	.globl _GPIF_WAVE_DATA
                            350 	.globl _sio0_init
                            351 	.globl _getchar
                            352 	.globl _putchar
                            353 ;--------------------------------------------------------
                            354 ; special function registers
                            355 ;--------------------------------------------------------
                            356 	.area RSEG    (DATA)
                    0080    357 _IOA	=	0x0080
                    0081    358 _SP	=	0x0081
                    0082    359 _DPL	=	0x0082
                    0083    360 _DPH	=	0x0083
                    0084    361 _DPL1	=	0x0084
                    0085    362 _DPH1	=	0x0085
                    0086    363 _DPS	=	0x0086
                    0087    364 _PCON	=	0x0087
                    0088    365 _TCON	=	0x0088
                    0089    366 _TMOD	=	0x0089
                    008A    367 _TL0	=	0x008a
                    008B    368 _TL1	=	0x008b
                    008C    369 _TH0	=	0x008c
                    008D    370 _TH1	=	0x008d
                    008E    371 _CKCON	=	0x008e
                    0090    372 _IOB	=	0x0090
                    0091    373 _EXIF	=	0x0091
                    0092    374 __XPAGE	=	0x0092
                    0098    375 _SCON0	=	0x0098
                    0099    376 _SBUF0	=	0x0099
                    009A    377 _AUTOPTRH1	=	0x009a
                    009B    378 _AUTOPTRL1	=	0x009b
                    009D    379 _AUTOPTRH2	=	0x009d
                    009E    380 _AUTOPTRL2	=	0x009e
                    00A0    381 _IOC	=	0x00a0
                    00A1    382 _INT2CLR	=	0x00a1
                    00A2    383 _INT4CLR	=	0x00a2
                    00A8    384 _IE	=	0x00a8
                    00AA    385 _EP2468STAT	=	0x00aa
                    00AB    386 _EP24FIFOFLGS	=	0x00ab
                    00AC    387 _EP68FIFOFLGS	=	0x00ac
                    00AF    388 _AUTOPTRSETUP	=	0x00af
                    00B0    389 _IOD	=	0x00b0
                    00B1    390 _IOE	=	0x00b1
                    00B2    391 _OEA	=	0x00b2
                    00B3    392 _OEB	=	0x00b3
                    00B4    393 _OEC	=	0x00b4
                    00B5    394 _OED	=	0x00b5
                    00B6    395 _OEE	=	0x00b6
                    00B8    396 _IP	=	0x00b8
                    00BA    397 _EP01STAT	=	0x00ba
                    00BB    398 _GPIFTRIG	=	0x00bb
                    00BD    399 _GPIFSGLDATH	=	0x00bd
                    00BE    400 _GPIFSGLDATLX	=	0x00be
                    00BF    401 _GPIFSGLDATLNOX	=	0x00bf
                    00C0    402 _SCON1	=	0x00c0
                    00C1    403 _SBUF1	=	0x00c1
                    00C8    404 _T2CON	=	0x00c8
                    00CA    405 _RCAP2L	=	0x00ca
                    00CB    406 _RCAP2H	=	0x00cb
                    00CC    407 _TL2	=	0x00cc
                    00CD    408 _TH2	=	0x00cd
                    00D0    409 _PSW	=	0x00d0
                    00D8    410 _EICON	=	0x00d8
                    00E0    411 _ACC	=	0x00e0
                    00E8    412 _EIE	=	0x00e8
                    00F0    413 _B	=	0x00f0
                    00F8    414 _EIP	=	0x00f8
                            415 ;--------------------------------------------------------
                            416 ; special function bits
                            417 ;--------------------------------------------------------
                            418 	.area RSEG    (DATA)
                    0080    419 _PA0	=	0x0080
                    0081    420 _PA1	=	0x0081
                    0082    421 _PA2	=	0x0082
                    0083    422 _PA3	=	0x0083
                    0084    423 _PA4	=	0x0084
                    0085    424 _PA5	=	0x0085
                    0086    425 _PA6	=	0x0086
                    0087    426 _PA7	=	0x0087
                    0088    427 _IT0	=	0x0088
                    0089    428 _IE0	=	0x0089
                    008A    429 _IT1	=	0x008a
                    008B    430 _IE1	=	0x008b
                    008C    431 _TR0	=	0x008c
                    008D    432 _TF0	=	0x008d
                    008E    433 _TR1	=	0x008e
                    008F    434 _TF1	=	0x008f
                    0090    435 _PB0	=	0x0090
                    0091    436 _PB1	=	0x0091
                    0092    437 _PB2	=	0x0092
                    0093    438 _PB3	=	0x0093
                    0094    439 _PB4	=	0x0094
                    0095    440 _PB5	=	0x0095
                    0096    441 _PB6	=	0x0096
                    0097    442 _PB7	=	0x0097
                    0098    443 _RI	=	0x0098
                    0099    444 _TI	=	0x0099
                    009A    445 _RB8	=	0x009a
                    009B    446 _TB8	=	0x009b
                    009C    447 _REN	=	0x009c
                    009D    448 _SM2	=	0x009d
                    009E    449 _SM1	=	0x009e
                    009F    450 _SM0	=	0x009f
                    00A0    451 _PC0	=	0x00a0
                    00A1    452 _PC1	=	0x00a1
                    00A2    453 _PC2	=	0x00a2
                    00A3    454 _PC3	=	0x00a3
                    00A4    455 _PC4	=	0x00a4
                    00A5    456 _PC5	=	0x00a5
                    00A6    457 _PC6	=	0x00a6
                    00A7    458 _PC7	=	0x00a7
                    00A8    459 _EX0	=	0x00a8
                    00A9    460 _ET0	=	0x00a9
                    00AA    461 _EX1	=	0x00aa
                    00AB    462 _ET1	=	0x00ab
                    00AC    463 _ES0	=	0x00ac
                    00AD    464 _ET2	=	0x00ad
                    00AE    465 _ES1	=	0x00ae
                    00AF    466 _EA	=	0x00af
                    00B0    467 _PD0	=	0x00b0
                    00B1    468 _PD1	=	0x00b1
                    00B2    469 _PD2	=	0x00b2
                    00B3    470 _PD3	=	0x00b3
                    00B4    471 _PD4	=	0x00b4
                    00B5    472 _PD5	=	0x00b5
                    00B6    473 _PD6	=	0x00b6
                    00B7    474 _PD7	=	0x00b7
                    00B8    475 _PX0	=	0x00b8
                    00B9    476 _PT0	=	0x00b9
                    00BA    477 _PX1	=	0x00ba
                    00BB    478 _PT1	=	0x00bb
                    00BC    479 _PS0	=	0x00bc
                    00BD    480 _PT2	=	0x00bd
                    00BE    481 _PS1	=	0x00be
                    00C0    482 _RI1	=	0x00c0
                    00C1    483 _TI1	=	0x00c1
                    00C2    484 _RB81	=	0x00c2
                    00C3    485 _TB81	=	0x00c3
                    00C4    486 _REN1	=	0x00c4
                    00C5    487 _SM21	=	0x00c5
                    00C6    488 _SM11	=	0x00c6
                    00C7    489 _SM01	=	0x00c7
                    00C8    490 _CP_RL2	=	0x00c8
                    00C9    491 _C_T2	=	0x00c9
                    00CA    492 _TR2	=	0x00ca
                    00CB    493 _EXEN2	=	0x00cb
                    00CC    494 _TCLK	=	0x00cc
                    00CD    495 _RCLK	=	0x00cd
                    00CE    496 _EXF2	=	0x00ce
                    00CF    497 _TF2	=	0x00cf
                    00D0    498 _P	=	0x00d0
                    00D1    499 _FL	=	0x00d1
                    00D2    500 _OV	=	0x00d2
                    00D3    501 _RS0	=	0x00d3
                    00D4    502 _RS1	=	0x00d4
                    00D5    503 _F0	=	0x00d5
                    00D6    504 _AC	=	0x00d6
                    00D7    505 _CY	=	0x00d7
                    00DB    506 _INT6	=	0x00db
                    00DC    507 _RESI	=	0x00dc
                    00DD    508 _ERESI	=	0x00dd
                    00DF    509 _SMOD1	=	0x00df
                    00E8    510 _EUSB	=	0x00e8
                    00E9    511 _EI2C	=	0x00e9
                    00EA    512 _EIEX4	=	0x00ea
                    00EB    513 _EIEX5	=	0x00eb
                    00EC    514 _EIEX6	=	0x00ec
                    00F8    515 _PUSB	=	0x00f8
                    00F9    516 _PI2C	=	0x00f9
                    00FA    517 _EIPX4	=	0x00fa
                    00FB    518 _EIPX5	=	0x00fb
                    00FC    519 _EIPX6	=	0x00fc
                            520 ;--------------------------------------------------------
                            521 ; overlayable register banks
                            522 ;--------------------------------------------------------
                            523 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     524 	.ds 8
                            525 ;--------------------------------------------------------
                            526 ; internal ram data
                            527 ;--------------------------------------------------------
                            528 	.area DSEG    (DATA)
                            529 ;--------------------------------------------------------
                            530 ; overlayable items in internal ram 
                            531 ;--------------------------------------------------------
                            532 	.area	OSEG    (OVR,DATA)
                            533 	.area	OSEG    (OVR,DATA)
                            534 ;--------------------------------------------------------
                            535 ; indirectly addressable internal ram data
                            536 ;--------------------------------------------------------
                            537 	.area ISEG    (DATA)
                            538 ;--------------------------------------------------------
                            539 ; absolute internal ram data
                            540 ;--------------------------------------------------------
                            541 	.area IABS    (ABS,DATA)
                            542 	.area IABS    (ABS,DATA)
                            543 ;--------------------------------------------------------
                            544 ; bit data
                            545 ;--------------------------------------------------------
                            546 	.area BSEG    (BIT)
                            547 ;--------------------------------------------------------
                            548 ; paged external ram data
                            549 ;--------------------------------------------------------
                            550 	.area PSEG    (PAG,XDATA)
                            551 ;--------------------------------------------------------
                            552 ; external ram data
                            553 ;--------------------------------------------------------
                            554 	.area XSEG    (XDATA)
                    E400    555 _GPIF_WAVE_DATA	=	0xe400
                    E480    556 _RES_WAVEDATA_END	=	0xe480
                    E600    557 _CPUCS	=	0xe600
                    E601    558 _IFCONFIG	=	0xe601
                    E602    559 _PINFLAGSAB	=	0xe602
                    E603    560 _PINFLAGSCD	=	0xe603
                    E604    561 _FIFORESET	=	0xe604
                    E605    562 _BREAKPT	=	0xe605
                    E606    563 _BPADDRH	=	0xe606
                    E607    564 _BPADDRL	=	0xe607
                    E608    565 _UART230	=	0xe608
                    E609    566 _FIFOPINPOLAR	=	0xe609
                    E60A    567 _REVID	=	0xe60a
                    E60B    568 _REVCTL	=	0xe60b
                    E610    569 _EP1OUTCFG	=	0xe610
                    E611    570 _EP1INCFG	=	0xe611
                    E612    571 _EP2CFG	=	0xe612
                    E613    572 _EP4CFG	=	0xe613
                    E614    573 _EP6CFG	=	0xe614
                    E615    574 _EP8CFG	=	0xe615
                    E618    575 _EP2FIFOCFG	=	0xe618
                    E619    576 _EP4FIFOCFG	=	0xe619
                    E61A    577 _EP6FIFOCFG	=	0xe61a
                    E61B    578 _EP8FIFOCFG	=	0xe61b
                    E620    579 _EP2AUTOINLENH	=	0xe620
                    E621    580 _EP2AUTOINLENL	=	0xe621
                    E622    581 _EP4AUTOINLENH	=	0xe622
                    E623    582 _EP4AUTOINLENL	=	0xe623
                    E624    583 _EP6AUTOINLENH	=	0xe624
                    E625    584 _EP6AUTOINLENL	=	0xe625
                    E626    585 _EP8AUTOINLENH	=	0xe626
                    E627    586 _EP8AUTOINLENL	=	0xe627
                    E630    587 _EP2FIFOPFH	=	0xe630
                    E631    588 _EP2FIFOPFL	=	0xe631
                    E632    589 _EP4FIFOPFH	=	0xe632
                    E633    590 _EP4FIFOPFL	=	0xe633
                    E634    591 _EP6FIFOPFH	=	0xe634
                    E635    592 _EP6FIFOPFL	=	0xe635
                    E636    593 _EP8FIFOPFH	=	0xe636
                    E637    594 _EP8FIFOPFL	=	0xe637
                    E640    595 _EP2ISOINPKTS	=	0xe640
                    E641    596 _EP4ISOINPKTS	=	0xe641
                    E642    597 _EP6ISOINPKTS	=	0xe642
                    E643    598 _EP8ISOINPKTS	=	0xe643
                    E648    599 _INPKTEND	=	0xe648
                    E649    600 _OUTPKTEND	=	0xe649
                    E650    601 _EP2FIFOIE	=	0xe650
                    E651    602 _EP2FIFOIRQ	=	0xe651
                    E652    603 _EP4FIFOIE	=	0xe652
                    E653    604 _EP4FIFOIRQ	=	0xe653
                    E654    605 _EP6FIFOIE	=	0xe654
                    E655    606 _EP6FIFOIRQ	=	0xe655
                    E656    607 _EP8FIFOIE	=	0xe656
                    E657    608 _EP8FIFOIRQ	=	0xe657
                    E658    609 _IBNIE	=	0xe658
                    E659    610 _IBNIRQ	=	0xe659
                    E65A    611 _NAKIE	=	0xe65a
                    E65B    612 _NAKIRQ	=	0xe65b
                    E65C    613 _USBIE	=	0xe65c
                    E65D    614 _USBIRQ	=	0xe65d
                    E65E    615 _EPIE	=	0xe65e
                    E65F    616 _EPIRQ	=	0xe65f
                    E660    617 _GPIFIE	=	0xe660
                    E661    618 _GPIFIRQ	=	0xe661
                    E662    619 _USBERRIE	=	0xe662
                    E663    620 _USBERRIRQ	=	0xe663
                    E664    621 _ERRCNTLIM	=	0xe664
                    E665    622 _CLRERRCNT	=	0xe665
                    E666    623 _INT2IVEC	=	0xe666
                    E667    624 _INT4IVEC	=	0xe667
                    E668    625 _INTSETUP	=	0xe668
                    E670    626 _PORTACFG	=	0xe670
                    E671    627 _PORTCCFG	=	0xe671
                    E672    628 _PORTECFG	=	0xe672
                    E678    629 _I2CS	=	0xe678
                    E679    630 _I2DAT	=	0xe679
                    E67A    631 _I2CTL	=	0xe67a
                    E67B    632 _XAUTODAT1	=	0xe67b
                    E67C    633 _XAUTODAT2	=	0xe67c
                    E680    634 _USBCS	=	0xe680
                    E681    635 _SUSPEND	=	0xe681
                    E682    636 _WAKEUPCS	=	0xe682
                    E683    637 _TOGCTL	=	0xe683
                    E684    638 _USBFRAMEH	=	0xe684
                    E685    639 _USBFRAMEL	=	0xe685
                    E686    640 _MICROFRAME	=	0xe686
                    E687    641 _FNADDR	=	0xe687
                    E68A    642 _EP0BCH	=	0xe68a
                    E68B    643 _EP0BCL	=	0xe68b
                    E68D    644 _EP1OUTBC	=	0xe68d
                    E68F    645 _EP1INBC	=	0xe68f
                    E690    646 _EP2BCH	=	0xe690
                    E691    647 _EP2BCL	=	0xe691
                    E694    648 _EP4BCH	=	0xe694
                    E695    649 _EP4BCL	=	0xe695
                    E698    650 _EP6BCH	=	0xe698
                    E699    651 _EP6BCL	=	0xe699
                    E69C    652 _EP8BCH	=	0xe69c
                    E69D    653 _EP8BCL	=	0xe69d
                    E6A0    654 _EP0CS	=	0xe6a0
                    E6A1    655 _EP1OUTCS	=	0xe6a1
                    E6A2    656 _EP1INCS	=	0xe6a2
                    E6A3    657 _EP2CS	=	0xe6a3
                    E6A4    658 _EP4CS	=	0xe6a4
                    E6A5    659 _EP6CS	=	0xe6a5
                    E6A6    660 _EP8CS	=	0xe6a6
                    E6A7    661 _EP2FIFOFLGS	=	0xe6a7
                    E6A8    662 _EP4FIFOFLGS	=	0xe6a8
                    E6A9    663 _EP6FIFOFLGS	=	0xe6a9
                    E6AA    664 _EP8FIFOFLGS	=	0xe6aa
                    E6AB    665 _EP2FIFOBCH	=	0xe6ab
                    E6AC    666 _EP2FIFOBCL	=	0xe6ac
                    E6AD    667 _EP4FIFOBCH	=	0xe6ad
                    E6AE    668 _EP4FIFOBCL	=	0xe6ae
                    E6AF    669 _EP6FIFOBCH	=	0xe6af
                    E6B0    670 _EP6FIFOBCL	=	0xe6b0
                    E6B1    671 _EP8FIFOBCH	=	0xe6b1
                    E6B2    672 _EP8FIFOBCL	=	0xe6b2
                    E6B3    673 _SUDPTRH	=	0xe6b3
                    E6B4    674 _SUDPTRL	=	0xe6b4
                    E6B5    675 _SUDPTRCTL	=	0xe6b5
                    E6B8    676 _SETUPDAT	=	0xe6b8
                    E6C0    677 _GPIFWFSELECT	=	0xe6c0
                    E6C1    678 _GPIFIDLECS	=	0xe6c1
                    E6C2    679 _GPIFIDLECTL	=	0xe6c2
                    E6C3    680 _GPIFCTLCFG	=	0xe6c3
                    E6C4    681 _GPIFADRH	=	0xe6c4
                    E6C5    682 _GPIFADRL	=	0xe6c5
                    E6CE    683 _GPIFTCB3	=	0xe6ce
                    E6CF    684 _GPIFTCB2	=	0xe6cf
                    E6D0    685 _GPIFTCB1	=	0xe6d0
                    E6D1    686 _GPIFTCB0	=	0xe6d1
                    E6D2    687 _EP2GPIFFLGSEL	=	0xe6d2
                    E6D3    688 _EP2GPIFPFSTOP	=	0xe6d3
                    E6D4    689 _EP2GPIFTRIG	=	0xe6d4
                    E6DA    690 _EP4GPIFFLGSEL	=	0xe6da
                    E6DB    691 _EP4GPIFPFSTOP	=	0xe6db
                    E6DC    692 _EP4GPIFTRIG	=	0xe6dc
                    E6E2    693 _EP6GPIFFLGSEL	=	0xe6e2
                    E6E3    694 _EP6GPIFPFSTOP	=	0xe6e3
                    E6E4    695 _EP6GPIFTRIG	=	0xe6e4
                    E6EA    696 _EP8GPIFFLGSEL	=	0xe6ea
                    E6EB    697 _EP8GPIFPFSTOP	=	0xe6eb
                    E6EC    698 _EP8GPIFTRIG	=	0xe6ec
                    E6F0    699 _XGPIFSGLDATH	=	0xe6f0
                    E6F1    700 _XGPIFSGLDATLX	=	0xe6f1
                    E6F2    701 _XGPIFSGLDATLNOX	=	0xe6f2
                    E6F3    702 _GPIFREADYCFG	=	0xe6f3
                    E6F4    703 _GPIFREADYSTAT	=	0xe6f4
                    E6F5    704 _GPIFABORT	=	0xe6f5
                    E6C6    705 _FLOWSTATE	=	0xe6c6
                    E6C7    706 _FLOWLOGIC	=	0xe6c7
                    E6C8    707 _FLOWEQ0CTL	=	0xe6c8
                    E6C9    708 _FLOWEQ1CTL	=	0xe6c9
                    E6CA    709 _FLOWHOLDOFF	=	0xe6ca
                    E6CB    710 _FLOWSTB	=	0xe6cb
                    E6CC    711 _FLOWSTBEDGE	=	0xe6cc
                    E6CD    712 _FLOWSTBHPERIOD	=	0xe6cd
                    E60C    713 _GPIFHOLDAMOUNT	=	0xe60c
                    E67D    714 _UDMACRCH	=	0xe67d
                    E67E    715 _UDMACRCL	=	0xe67e
                    E67F    716 _UDMACRCQUAL	=	0xe67f
                    E740    717 _EP0BUF	=	0xe740
                    E780    718 _EP1OUTBUF	=	0xe780
                    E7C0    719 _EP1INBUF	=	0xe7c0
                    F000    720 _EP2FIFOBUF	=	0xf000
                    F400    721 _EP4FIFOBUF	=	0xf400
                    F800    722 _EP6FIFOBUF	=	0xf800
                    FC00    723 _EP8FIFOBUF	=	0xfc00
                    E628    724 _ECCCFG	=	0xe628
                    E629    725 _ECCRESET	=	0xe629
                    E62A    726 _ECC1B0	=	0xe62a
                    E62B    727 _ECC1B1	=	0xe62b
                    E62C    728 _ECC1B2	=	0xe62c
                    E62D    729 _ECC2B0	=	0xe62d
                    E62E    730 _ECC2B1	=	0xe62e
                    E62F    731 _ECC2B2	=	0xe62f
                    E50D    732 _GPCR2	=	0xe50d
                            733 ;--------------------------------------------------------
                            734 ; absolute external ram data
                            735 ;--------------------------------------------------------
                            736 	.area XABS    (ABS,XDATA)
                            737 ;--------------------------------------------------------
                            738 ; external initialized ram data
                            739 ;--------------------------------------------------------
                            740 	.area XISEG   (XDATA)
                            741 	.area HOME    (CODE)
                            742 	.area GSINIT0 (CODE)
                            743 	.area GSINIT1 (CODE)
                            744 	.area GSINIT2 (CODE)
                            745 	.area GSINIT3 (CODE)
                            746 	.area GSINIT4 (CODE)
                            747 	.area GSINIT5 (CODE)
                            748 	.area GSINIT  (CODE)
                            749 	.area GSFINAL (CODE)
                            750 	.area CSEG    (CODE)
                            751 ;--------------------------------------------------------
                            752 ; global & static initialisations
                            753 ;--------------------------------------------------------
                            754 	.area HOME    (CODE)
                            755 	.area GSINIT  (CODE)
                            756 	.area GSFINAL (CODE)
                            757 	.area GSINIT  (CODE)
                            758 ;--------------------------------------------------------
                            759 ; Home
                            760 ;--------------------------------------------------------
                            761 	.area HOME    (CODE)
                            762 	.area HOME    (CODE)
                            763 ;--------------------------------------------------------
                            764 ; code
                            765 ;--------------------------------------------------------
                            766 	.area CSEG    (CODE)
                            767 ;------------------------------------------------------------
                            768 ;Allocation info for local variables in function 'sio0_init'
                            769 ;------------------------------------------------------------
                            770 ;baud_rate                 Allocated to registers r2 r3 
                            771 ;hl                        Allocated to registers r5 r6 
                            772 ;mult                      Allocated to registers r4 
                            773 ;tmp                       Allocated to registers r5 r6 r7 r0 
                            774 ;------------------------------------------------------------
                            775 ;	serial.c:29: void sio0_init( WORD baud_rate ) __critical { // baud_rate max should be 57600 since int=2 bytes
                            776 ;	-----------------------------------------
                            777 ;	 function sio0_init
                            778 ;	-----------------------------------------
   0000                     779 _sio0_init:
                    0002    780 	ar2 = 0x02
                    0003    781 	ar3 = 0x03
                    0004    782 	ar4 = 0x04
                    0005    783 	ar5 = 0x05
                    0006    784 	ar6 = 0x06
                    0007    785 	ar7 = 0x07
                    0000    786 	ar0 = 0x00
                    0001    787 	ar1 = 0x01
   0000 D3                  788 	setb	c
   0001 10 AF 01            789 	jbc	ea,00112$
   0004 C3                  790 	clr	c
   0005                     791 00112$:
   0005 C0 D0               792 	push	psw
   0007 AA 82               793 	mov	r2,dpl
   0009 AB 83               794 	mov	r3,dph
                            795 ;	serial.c:36: mult = CPUFREQ == CLK_12M ? 1 :
   000B 90 E6 00            796 	mov	dptr,#_CPUCS
   000E E0                  797 	movx	a,@dptr
   000F 54 18               798 	anl	a,#0x18
   0011 C4                  799 	swap	a
   0012 23                  800 	rl	a
   0013 54 1F               801 	anl	a,#0x1f
   0015 FC                  802 	mov	r4,a
   0016 B4 01 00            803 	cjne	a,#0x01,00113$
   0019                     804 00113$:
   0019 E4                  805 	clr	a
   001A 33                  806 	rlc	a
   001B FC                  807 	mov	r4,a
   001C 60 04               808 	jz	00103$
   001E 7C 01               809 	mov	r4,#0x01
   0020 80 16               810 	sjmp	00104$
   0022                     811 00103$:
                            812 ;	serial.c:37: CPUFREQ == CLK_24M ? 2 : 4; // since only 3 clock speeds, fast switch instead of doing 2^clock speed pow(2,clkspd)
   0022 90 E6 00            813 	mov	dptr,#_CPUCS
   0025 E0                  814 	movx	a,@dptr
   0026 54 18               815 	anl	a,#0x18
   0028 C4                  816 	swap	a
   0029 23                  817 	rl	a
   002A 54 1F               818 	anl	a,#0x1f
   002C FD                  819 	mov	r5,a
   002D BD 01 04            820 	cjne	r5,#0x01,00105$
   0030 7D 02               821 	mov	r5,#0x02
   0032 80 02               822 	sjmp	00106$
   0034                     823 00105$:
   0034 7D 04               824 	mov	r5,#0x04
   0036                     825 00106$:
   0036 8D 04               826 	mov	ar4,r5
   0038                     827 00104$:
                            828 ;	serial.c:41: RCLK=1;TCLK=1;
   0038 D2 CD               829 	setb	_RCLK
   003A D2 CC               830 	setb	_TCLK
                            831 ;	serial.c:50: tmp = mult * 375000L * 2 ;
   003C 8C*00               832 	mov	__mullong_PARM_2,r4
   003E 75*01 00            833 	mov	(__mullong_PARM_2 + 1),#0x00
   0041 75*02 00            834 	mov	(__mullong_PARM_2 + 2),#0x00
   0044 75*03 00            835 	mov	(__mullong_PARM_2 + 3),#0x00
   0047 90 71 B0            836 	mov	dptr,#0x71B0
   004A 75 F0 0B            837 	mov	b,#0x0B
   004D E4                  838 	clr	a
   004E C0 02               839 	push	ar2
   0050 C0 03               840 	push	ar3
   0052 C0 04               841 	push	ar4
   0054 12s00r00            842 	lcall	__mullong
   0057 AD 82               843 	mov	r5,dpl
   0059 AE 83               844 	mov	r6,dph
   005B AF F0               845 	mov	r7,b
   005D F8                  846 	mov	r0,a
   005E D0 04               847 	pop	ar4
   0060 D0 03               848 	pop	ar3
   0062 D0 02               849 	pop	ar2
                            850 ;	serial.c:51: tmp /= baud_rate;
   0064 8A*00               851 	mov	__divulong_PARM_2,r2
   0066 8B*01               852 	mov	(__divulong_PARM_2 + 1),r3
   0068 75*02 00            853 	mov	(__divulong_PARM_2 + 2),#0x00
   006B 75*03 00            854 	mov	(__divulong_PARM_2 + 3),#0x00
   006E 8D 82               855 	mov	dpl,r5
   0070 8E 83               856 	mov	dph,r6
   0072 8F F0               857 	mov	b,r7
   0074 E8                  858 	mov	a,r0
   0075 C0 04               859 	push	ar4
   0077 12s00r00            860 	lcall	__divulong
   007A AD 82               861 	mov	r5,dpl
   007C AE 83               862 	mov	r6,dph
   007E AF F0               863 	mov	r7,b
   0080 F8                  864 	mov	r0,a
   0081 D0 04               865 	pop	ar4
                            866 ;	serial.c:52: tmp += 1;
   0083 0D                  867 	inc	r5
   0084 BD 00 09            868 	cjne	r5,#0x00,00117$
   0087 0E                  869 	inc	r6
   0088 BE 00 05            870 	cjne	r6,#0x00,00117$
   008B 0F                  871 	inc	r7
   008C BF 00 01            872 	cjne	r7,#0x00,00117$
   008F 08                  873 	inc	r0
   0090                     874 00117$:
                            875 ;	serial.c:53: tmp /= 2;
   0090 E8                  876 	mov	a,r0
   0091 C3                  877 	clr	c
   0092 13                  878 	rrc	a
   0093 F8                  879 	mov	r0,a
   0094 EF                  880 	mov	a,r7
   0095 13                  881 	rrc	a
   0096 FF                  882 	mov	r7,a
   0097 EE                  883 	mov	a,r6
   0098 13                  884 	rrc	a
   0099 FE                  885 	mov	r6,a
   009A ED                  886 	mov	a,r5
   009B 13                  887 	rrc	a
   009C FD                  888 	mov	r5,a
                            889 ;	serial.c:55: hl = 0xFFFF - (WORD)tmp;
   009D 74 FF               890 	mov	a,#0xFF
   009F C3                  891 	clr	c
   00A0 9D                  892 	subb	a,r5
   00A1 FD                  893 	mov	r5,a
   00A2 74 FF               894 	mov	a,#0xFF
   00A4 9E                  895 	subb	a,r6
   00A5 FE                  896 	mov	r6,a
                            897 ;	serial.c:57: RCAP2H= MSB(hl);
   00A6 8E CB               898 	mov	_RCAP2H,r6
                            899 ;	serial.c:60: RCAP2L= LSB(hl) + (mult>0?1:0);
   00A8 7E 00               900 	mov	r6,#0x00
   00AA EC                  901 	mov	a,r4
   00AB 60 04               902 	jz	00107$
   00AD 7A 01               903 	mov	r2,#0x01
   00AF 80 02               904 	sjmp	00108$
   00B1                     905 00107$:
   00B1 7A 00               906 	mov	r2,#0x00
   00B3                     907 00108$:
   00B3 EA                  908 	mov	a,r2
   00B4 2D                  909 	add	a,r5
   00B5 F5 CA               910 	mov	_RCAP2L,a
                            911 ;	serial.c:61: TR2=1; // start the timer
   00B7 D2 CA               912 	setb	_TR2
                            913 ;	serial.c:64: SM0 = 0; SM1=1;// serial mode 1 (asyncronous)	
   00B9 C2 9F               914 	clr	_SM0
   00BB D2 9E               915 	setb	_SM1
                            916 ;	serial.c:65: SM2 = 0 ; // has to do with receiving
   00BD C2 9D               917 	clr	_SM2
                            918 ;	serial.c:66: REN = 1 ; // to enable receiving
   00BF D2 9C               919 	setb	_REN
                            920 ;	serial.c:67: PCON |= 0x80; // SET SMOD0, baud rate doubler
   00C1 43 87 80            921 	orl	_PCON,#0x80
                            922 ;	serial.c:68: TI = 1; // we send initial byte
   00C4 D2 99               923 	setb	_TI
   00C6 D0 D0               924 	pop	psw
   00C8 92 AF               925 	mov	ea,c
   00CA 22                  926 	ret
                            927 ;------------------------------------------------------------
                            928 ;Allocation info for local variables in function 'getchar'
                            929 ;------------------------------------------------------------
                            930 ;c                         Allocated to registers 
                            931 ;------------------------------------------------------------
                            932 ;	serial.c:72: char getchar() {
                            933 ;	-----------------------------------------
                            934 ;	 function getchar
                            935 ;	-----------------------------------------
   00CB                     936 _getchar:
                            937 ;	serial.c:74: while (!RI)
   00CB                     938 00101$:
   00CB 30 98 FD            939 	jnb	_RI,00101$
                            940 ;	serial.c:76: c=SBUF0;
   00CE 85 99 82            941 	mov	dpl,_SBUF0
                            942 ;	serial.c:77: RI=0;
   00D1 C2 98               943 	clr	_RI
                            944 ;	serial.c:78: return c;
   00D3 22                  945 	ret
                            946 ;------------------------------------------------------------
                            947 ;Allocation info for local variables in function '_transchar'
                            948 ;------------------------------------------------------------
                            949 ;c                         Allocated to registers r2 
                            950 ;------------------------------------------------------------
                            951 ;	serial.c:81: void _transchar(char c) {
                            952 ;	-----------------------------------------
                            953 ;	 function _transchar
                            954 ;	-----------------------------------------
   00D4                     955 __transchar:
   00D4 AA 82               956 	mov	r2,dpl
                            957 ;	serial.c:82: while ( !TI ); // wait for TI=1 
   00D6                     958 00101$:
                            959 ;	serial.c:83: TI=0;
   00D6 10 99 02            960 	jbc	_TI,00108$
   00D9 80 FB               961 	sjmp	00101$
   00DB                     962 00108$:
                            963 ;	serial.c:84: SBUF0=c;
   00DB 8A 99               964 	mov	_SBUF0,r2
   00DD 22                  965 	ret
                            966 ;------------------------------------------------------------
                            967 ;Allocation info for local variables in function 'putchar'
                            968 ;------------------------------------------------------------
                            969 ;c                         Allocated to registers r2 
                            970 ;------------------------------------------------------------
                            971 ;	serial.c:87: void putchar (char c) {
                            972 ;	-----------------------------------------
                            973 ;	 function putchar
                            974 ;	-----------------------------------------
   00DE                     975 _putchar:
   00DE AA 82               976 	mov	r2,dpl
                            977 ;	serial.c:88: if (c=='\n') _transchar('\r'); // transmit \r\n
   00E0 BA 0A 0A            978 	cjne	r2,#0x0A,00102$
   00E3 75 82 0D            979 	mov	dpl,#0x0D
   00E6 C0 02               980 	push	ar2
   00E8 12s00rD4            981 	lcall	__transchar
   00EB D0 02               982 	pop	ar2
   00ED                     983 00102$:
                            984 ;	serial.c:89: _transchar(c);  
   00ED 8A 82               985 	mov	dpl,r2
   00EF C0 02               986 	push	ar2
   00F1 12s00rD4            987 	lcall	__transchar
   00F4 D0 02               988 	pop	ar2
                            989 ;	serial.c:90: if (c == '\r' ) _transchar('\n'); // transmit \r\n
   00F6 BA 0D 06            990 	cjne	r2,#0x0D,00105$
   00F9 75 82 0A            991 	mov	dpl,#0x0A
   00FC 02s00rD4            992 	ljmp	__transchar
   00FF                     993 00105$:
   00FF 22                  994 	ret
                            995 	.area CSEG    (CODE)
                            996 	.area CONST   (CODE)
                            997 	.area XINIT   (CODE)
                            998 	.area CABS    (ABS,CODE)
